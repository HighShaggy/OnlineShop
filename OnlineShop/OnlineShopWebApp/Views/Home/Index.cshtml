@model IPagedList<OnlineShopWebApp.Models.ProductViewModel>
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@using X.PagedList.Mvc.Core.Common;

<head>
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.4/css/all.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <style>
        .carousel-item img {
            object-fit: contain;
            max-height: 300px;
            height: 500px;
        }

        .carousel-caption {
            background-color: rgba(0, 0, 0, 0.6); /* добавляем прозрачность для улучшения видимости текста */
        }

        .carousel-control-prev-icon,
        .carousel-control-next-icon {
            background-color: rgba(0, 0, 0, 0.6); /* добавляем прозрачность для улучшения видимости стрелок */
        }

        .btn-primary {
            font-weight: bold;
            font-size: 20px;
        }

        a:link {
            color: white;
        }

        a:visited {
            color: white;
        }

        .carousel-caption a {
            color: white;
        }
    </style>
</head>

<div id="productCarousel" class="carousel slide" data-ride="carousel">
    <div class="carousel-inner">
        @{
            var first = Model.First();
        }
        <div class="carousel-item active">
            <a href="@Url.Action("Details", "Product", new { id = first.Id })" style="color: white;">
                <img src="@Url.Content(first.ImagePath)" class="d-block w-100">
            </a>
            <div class="carousel-caption d-none d-md-block">
                <h5>
                    <a href="@Url.Action("Details", "Product", new { id = first.Id })">@first.Name</a>
                </h5>
            </div>
        </div>
        @foreach (var product in Model.Skip(1))
        {
            <div class="carousel-item">
                <a href="@Url.Action("Details", "Product", new { id = product.Id })">
                    <img src="@Url.Content(product.ImagePath)" class="d-block w-100">
                </a>
                <div class="carousel-caption d-none d-md-block">
                    <h5>
                        <a href="@Url.Action("Details", "Product", new { id = product.Id })">@product.Name</a>
                    </h5>
                </div>
            </div>
        }
    </div>
    <a class="carousel-control-prev" href="#productCarousel" role="button" data-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="sr-only">Previous</span>
    </a>
    <a class="carousel-control-next" href="#productCarousel" role="button" data-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="sr-only">Next</span>
    </a>
</div>

<div class="container mt-5">
    <hr class="my-5">
</div>

<style>
    .smaller-card {
        height: 80%;
    }
</style>
<div class="container mt-5">
    <div class="row">
        @foreach (var product in Model)
        {
            <div class="col-lg-3 col-md-6 mb-4">
                <div class="card h-100 smaller-card">
                    <a href="@Url.Action("Details", "Product", new { id = product.Id })">
                        <img class="card-img-top" src="@Url.Content(product.ImagePath)" alt="@product.Name">
                    </a>
                    <div class="card-body">
                        <h4 class="card-title">
                            <a href="@Url.Action("Details", "Product", new { id = product.Id })">@product.Name</a>
                        </h4>
                        <p class="card-text">@product.Description</p>
                    </div>
                    <div class="card-footer">
                        <a href="@Url.Action("Details", "Product", new { id = product.Id })" style="background-color: black; color: white; font-size: 12px;" class="btn btn-primary">Подробнее</a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
<style>
    .pagination-container {
        display: flex;
        justify-content: center;
        margin: 20px 0;
        background-color: #f9f9f9;
        border-radius: 50px;
        padding: 10px 0;
        box-shadow: 0 0 15px rgba(0,0,0,0.1);
    }

    .page-item {
        border: 1px solid transparent;
        padding: 10px 15px;
        margin: 0 10px;
        text-decoration: none;
        border-radius: 50px;
        transition: all 0.3s;
        font-weight: bold;
        color: #333;
    }

        .page-item:hover, .page-item:focus {
            background-color: #007BFF;
            border-color: #007BFF;
            color: #fff;
        }

        .page-item.active {
            background-color: #007BFF;
            border-color: #007BFF;
            color: #fff;
        }
</style>
<div class="pagination-container">
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page }), new X.PagedList.Mvc.Core.Common.PagedListRenderOptions() {
    DisplayLinkToIndividualPages = true,
    LinkToIndividualPageFormat = "{0}",
    PageClasses = new[] { "page-item" },
    })
</div>











